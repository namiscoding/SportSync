@{
    ViewData["Title"] = "Đăng Ký Tài Khoản";
    Layout = "_AuthLayout"; // Bỏ comment nếu bạn có layout này
}

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h1 class="auth-title mt-3">Đăng Ký Tài Khoản</h1>
            <p class="auth-subtitle">Tạo tài khoản mới để trải nghiệm dịch vụ của chúng tôi</p>
        </div>

        <div class="registration-progress mb-4" style="display: none;">
            @* Ẩn thanh tiến độ nếu chỉ có 1 bước *@
            <div class="progress-bar">
                <div class="progress-fill" id="progressFill" style="width: 100%;"></div> @* Luôn hiển thị 100% nếu chỉ có 1 bước *@
            </div>
            <div class="progress-steps">
                <div class="step active" id="step1">
                    @* Giữ lại để dễ tùy biến nếu muốn thêm bước sau này *@
                    <div class="step-number">1</div>
                    <div class="step-label">Hoàn tất</div>
                </div>
                @* Bỏ các bước 2 và 3 liên quan đến OTP *@
            </div>
        </div>

        <div class="registration-form">
            @* Bước 1: Nhập Số Điện Thoại, Họ tên, Mật khẩu (kết hợp các bước cũ) *@
            <div id="completeInfoSection" class="register-step active">
                @* Đổi ID và luôn active *@
                <h2 class="step-title visually-hidden">Hoàn tất thông tin tài khoản</h2>

                <div class="form-floating mb-3">
                    <input type="tel" id="phoneNumberInput" class="form-control form-control-lg" placeholder="Nhập số điện thoại">
                    <label for="phoneNumberInput">Số điện thoại</label>
                    <div class="form-text">Nhập số điện thoại bắt đầu bằng 0 hoặc +84.</div>
                    <div id="phoneNumberError" class="invalid-feedback d-block"></div>
                </div>

                <div class="form-floating mb-3">
                    <input type="text" id="fullNameInput" class="form-control form-control-lg" placeholder="Nhập họ và tên">
                    <label for="fullNameInput">Họ và tên</label>
                    <div id="fullNameError" class="invalid-feedback d-block"></div>
                </div>

                <div class="form-floating mb-3 password-container">
                    <input type="password" id="passwordInput" class="form-control form-control-lg" placeholder="Nhập mật khẩu">
                    <label for="passwordInput">Mật khẩu</label>
                    <button type="button" class="password-toggle" data-target="passwordInput"><i class="fas fa-eye"></i></button>
                    <div class="form-text">Mật khẩu phải có ít nhất 6 ký tự, bao gồm chữ hoa, chữ thường và số.</div>
                    <div id="passwordError" class="invalid-feedback d-block"></div>
                </div>

                <div class="form-floating mb-4 password-container">
                    <input type="password" id="confirmPasswordInput" class="form-control form-control-lg" placeholder="Nhập lại mật khẩu">
                    <label for="confirmPasswordInput">Xác nhận mật khẩu</label>
                    <button type="button" class="password-toggle" data-target="confirmPasswordInput"><i class="fas fa-eye"></i></button>
                    <div id="confirmPasswordError" class="invalid-feedback d-block"></div>
                </div>

                <div class="d-grid gap-2">
                    <button type="button" id="completeRegistrationButton" class="btn btn-primary btn-lg">
                        <span class="button-text">Hoàn Tất Đăng Ký</span>
                        <div id="registrationLoader" class="spinner-border spinner-border-sm ms-2" role="status" style="display: none;"></div>
                    </button>
                </div>
            </div>

            @* Xóa hoàn toàn các section liên quan đến OTP *@
            <div id="phoneNumberSection" class="register-step" style="display:none;"></div>
            <div id="otpSection" class="register-step" style="display:none;"></div>
        </div>

        <div id="authStatus" class="alert mt-4" role="alert" style="display: none;"></div>

        <div class="auth-footer mt-4">
            <p class="text-center">Đã có tài khoản? <a asp-action="Login" asp-controller="Account" class="fw-semibold text-primary">Đăng nhập ngay</a></p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // DOM Elements
            const phoneNumberInput = document.getElementById('phoneNumberInput');
            const fullNameInput = document.getElementById('fullNameInput');
            const passwordInput = document.getElementById('passwordInput');
            const confirmPasswordInput = document.getElementById('confirmPasswordInput');
            const completeRegistrationButton = document.getElementById('completeRegistrationButton');
            const registrationLoader = document.getElementById('registrationLoader');

            const authStatus = document.getElementById('authStatus');
            const phoneNumberError = document.getElementById('phoneNumberError');
            const fullNameError = document.getElementById('fullNameError');
            const passwordError = document.getElementById('passwordError');
            const confirmPasswordError = document.getElementById('confirmPasswordError');

            // Xóa bỏ các biến liên quan đến OTP không còn dùng
            // const otpInputs = document.querySelectorAll('.otp-input');
            // const otpInputHidden = document.getElementById('otpInputHidden');
            // const otpPhoneNumberDisplay = document.getElementById('otpPhoneNumberDisplay');
            // const otpTimerDisplay = document.getElementById('otpTimer');
            // const sendOtpButton = document.getElementById('sendOtpButton');
            // const resendOtpButton = document.getElementById('resendOtpButton');
            // const verifyOtpAndProceedButton = document.getElementById('verifyOtpAndProceedButton');
            // const cancelOtpEntryButton = document.getElementById('cancelOtpEntryButton');
            // const backToOtpButton = document.getElementById('backToOtpButton');
            // const loader = document.getElementById('loader');
            // const otpVerifyLoader = document.getElementById('otpVerifyLoader');
            // const otpError = document.getElementById('otpError');
            // let otpTimerInterval = null;
            // let otpRemainingTime = 120;


            const progressFill = document.getElementById('progressFill');
            const stepIndicators = [
                document.getElementById('step1') // Chỉ giữ lại step 1
            ];

            let currentNormalizedPhoneNumber = null; // Vẫn cần để gửi lên server

            // --- Helper Functions ---
            function showStatus(message, type = 'info') {
                if (authStatus) {
                    authStatus.textContent = message;
                    authStatus.className = `alert alert-${type} mt-4`;
                    authStatus.style.display = 'block';
                    if (type === 'success' || type === 'info') {
                        setTimeout(() => { if (authStatus && authStatus.classList.contains(`alert-${type}`)) { authStatus.style.display = 'none';}}, 5000);
                    }
                } else { console.warn("AuthStatus element not found"); }
            }

            function clearStatus() {
                if (authStatus) authStatus.style.display = 'none';
                if (phoneNumberError) phoneNumberError.textContent = '';
                // Xóa bỏ các error liên quan đến OTP
                // if (otpError) otpError.textContent = '';
                if (fullNameError) fullNameError.textContent = '';
                if (passwordError) passwordError.textContent = '';
                if (confirmPasswordError) confirmPasswordError.textContent = '';
                document.querySelectorAll('.form-control.is-invalid').forEach(el => el.classList.remove('is-invalid'));
            }

            function showInputError(inputEl, errorEl, message) {
                if (inputEl) inputEl.classList.add('is-invalid');
                if (errorEl) errorEl.textContent = message;
            }

            function formatPhoneNumberToE164(phoneNumber) {
                let cleaned = phoneNumber.replace(/\D/g, '');
                if (cleaned.startsWith("84")) { if (cleaned.length > 9 && cleaned.length < 12) return "+" + cleaned; }
                else if (cleaned.startsWith("0")) { if (cleaned.length === 10) return "+84" + cleaned.substring(1); }
                else if (cleaned.length === 9 && !phoneNumber.startsWith("+")) return "+84" + cleaned;
                if (phoneNumber.startsWith("+84") && phoneNumber.length > 10) return phoneNumber;
                return null;
            }

            // --- Progress Bar & Step Navigation (Đơn giản hóa) ---
            function updateProgress(currentStep) {
                // Với luồng đăng ký không OTP, luôn hiển thị 100% và chỉ có 1 bước active
                if (progressFill) progressFill.style.width = `100%`;
                stepIndicators.forEach((stepEl, index) => {
                    if (stepEl) {
                        stepEl.classList.remove('active', 'completed');
                        if (index === 0) { // Step 1 luôn là active/completed
                            stepEl.classList.add('active'); // Hoặc 'completed' tùy ý muốn hiển thị
                        }
                    } else { console.warn(`Step indicator at index ${index} is null.`); }
                });

                // Ẩn tất cả các section không cần thiết, chỉ hiển thị completeInfoSection
                document.querySelectorAll('.register-step').forEach(section => {
                    if (section && section.id !== 'completeInfoSection') { // Giữ lại id của section bạn muốn hiển thị
                        section.style.opacity = '0';
                        section.style.display = 'none';
                        section.classList.remove('active');
                    }
                });

                const activeSection = document.getElementById('completeInfoSection');
                if(activeSection) {
                    activeSection.classList.add('active');
                    activeSection.style.display = 'block';
                    setTimeout(() => activeSection.style.opacity = '1', 50);
                }
            }

            // --- Event Listener cho nút Hoàn Tất Đăng Ký ---
            if (completeRegistrationButton) {
                completeRegistrationButton.addEventListener('click', async function() {
                    clearStatus();

                    const rawPhoneNumber = phoneNumberInput ? phoneNumberInput.value.trim() : "";
                    currentNormalizedPhoneNumber = formatPhoneNumberToE164(rawPhoneNumber);

                    const fullName = fullNameInput ? fullNameInput.value.trim() : "";
                    const password = passwordInput ? passwordInput.value : "";
                    const confirmPassword = confirmPasswordInput ? confirmPasswordInput.value : "";
                    let isValid = true;

                    // Validate inputs
                    if (!currentNormalizedPhoneNumber) {
                        showInputError(phoneNumberInput, phoneNumberError, 'Số điện thoại không hợp lệ.');
                        isValid = false;
                    }
                    if (!fullName) {
                        showInputError(fullNameInput, fullNameError, 'Vui lòng nhập họ và tên.');
                        if(isValid) fullNameInput.focus(); // Focus vào trường lỗi đầu tiên
                        isValid = false;
                    }
                    // Validate password complexity (you might want a more robust regex here)
                    if (!password || password.length < 6 || !/[A-Z]/.test(password) || !/[a-z]/.test(password) || !/\d/.test(password)) {
                        showInputError(passwordInput, passwordError, 'Mật khẩu phải có ít nhất 6 ký tự, bao gồm chữ hoa, chữ thường và số.');
                        if(isValid) passwordInput.focus();
                        isValid = false;
                    }
                    if (password !== confirmPassword) {
                        showInputError(confirmPasswordInput, confirmPasswordError, 'Mật khẩu xác nhận không khớp.');
                        if(isValid) confirmPasswordInput.focus();
                        isValid = false;
                    }

                    if (!isValid) {
                        showStatus('Vui lòng kiểm tra lại thông tin đăng ký.', 'danger');
                        return;
                    }

                    completeRegistrationButton.disabled = true;
                    if (registrationLoader) registrationLoader.style.display = 'inline-block';
                    showStatus('Đang hoàn tất đăng ký...', 'info');

                    try {
                        const response = await fetch('/Account/Register', { // Giả định bạn có một action Register mới trên server
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
                            body: JSON.stringify({
                                PhoneNumber: currentNormalizedPhoneNumber,
                                FullName: fullName,
                                Password: password,
                                ConfirmPassword: confirmPassword
                            })
                        });
                        const data = await response.json();

                        if (response.ok && data.success) {
                            showStatus('Đăng ký thành công! Đang chuyển hướng...', 'success');
                            // Tùy chọn: Xóa form hoặc chuyển hướng
                            setTimeout(() => { window.location.href = data.redirectUrl || '/'; }, 1500);
                        } else {
                            let serverErrorMessage = data.message || 'Không thể hoàn tất đăng ký.';
                            if (data.errors && Array.isArray(data.errors)) {
                                serverErrorMessage = data.errors.join(' ');
                                // Xử lý lỗi cụ thể từ server nếu cần, ví dụ:
                                data.errors.forEach(err => {
                                    const errLower = err.toLowerCase();
                                    if (errLower.includes("số điện thoại") && phoneNumberError) {
                                        showInputError(phoneNumberInput, phoneNumberError, err);
                                    } else if (errLower.includes("mật khẩu") && passwordError) {
                                        showInputError(passwordInput, passwordError, err);
                                    } else if (errLower.includes("họ và tên") && fullNameError) {
                                        showInputError(fullNameInput, fullNameError, err);
                                    }
                                });
                            }
                            showStatus('Lỗi: ' + serverErrorMessage, 'danger');
                        }
                    } catch (error) {
                        console.error('Lỗi khi gửi yêu cầu hoàn tất đăng ký:', error);
                        showStatus('Lỗi kết nối: ' + error.message, 'danger');
                    } finally {
                        if (completeRegistrationButton) completeRegistrationButton.disabled = false;
                        if (registrationLoader) registrationLoader.style.display = 'none';
                    }
                });
            }

            // Password visibility toggle (giữ nguyên)
            document.querySelectorAll('.password-toggle').forEach(button => {
                button.addEventListener('click', function () {
                    const target = document.getElementById(this.dataset.target);
                    const icon = this.querySelector('i');
                    if (target && icon) {
                        if (target.type === 'password') {
                            target.type = 'text';
                            icon.classList.remove('fa-eye');
                            icon.classList.add('fa-eye-slash');
                        } else {
                            target.type = 'password';
                            icon.classList.remove('fa-eye-slash');
                            icon.classList.add('fa-eye');
                        }
                    }
                });
            });

            // Initial setup - Luôn hiển thị bước hoàn tất thông tin
            updateProgress(1); // Mặc định chỉ có 1 bước
            if(completeRegistrationButton) completeRegistrationButton.disabled = false;
        });
    </script>
} 