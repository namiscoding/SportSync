@{
    ViewBag.Title = "Tìm sân";
}

<link rel="stylesheet"
      href="https://api.mapbox.com/mapbox-gl-js/v3.4.0/mapbox-gl.css" />
<style>
    #map {
        height: 420px;
        width: 100%;
        border-radius: 8px;
        margin-bottom: 1rem;
    }

    .card-slot {
        margin: .15rem;
        display: inline-block
    }

    #btnNearby {
        margin-left: 1rem;
    }
</style>

<h2 class="mb-3">Tìm sân</h2>

<form id="filterForm" class="row g-3 mb-2">
    <div class="col-md-3">
        <label class="form-label">Loại sân</label>
        <select class="form-select" name="SportTypeId">
            <option value="">-- Tất cả --</option>
            @foreach (var t in (IEnumerable<dynamic>)ViewBag.SportTypes)
            {
                <option value="@t.SportTypeId">@t.Name</option>
            }
        </select>
    </div>
    <div class="col-md-3">
        <label class="form-label">Thành phố</label>
        <select class="form-control" name="City" id="CitySelect" onchange="loadDistricts()">
            <option value="">-- Chọn Thành phố --</option>
        </select>
    </div>

    <div class="col-md-3">
        <label class="form-label">Quận/Huyện</label>
        <select class="form-control" name="District" id="DistrictSelect">
            <option value="">-- Chọn Quận/Huyện --</option>
        </select>
    </div>
    <div class="col-md-3">
        <label class="form-label">Ngày</label>
        <input type="date" class="form-control" name="Date"
               value="@DateTime.Today.ToString("yyyy-MM-dd")" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Từ</label>
        <input type="time" class="form-control" name="FromTime" value="07:00" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Đến</label>
        <input type="time" class="form-control" name="ToTime" value="09:00" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Bán kính (km)</label>
        <input type="number" class="form-control" name="RadiusKm" value="10" step="0.5" />
    </div>

    <!-- GPS tự điền -->
    <input type="hidden" name="UserLat" id="UserLat" />
    <input type="hidden" name="UserLng" id="UserLng" />

    <div class="col-md-2 align-self-end d-flex">
        <button type="submit" class="btn btn-primary w-50">Tìm</button>
        <button type="button" id="btnNearby" class="btn btn-outline-primary w-50">Tìm sân gần đây</button>
    </div>
</form>

<div id="map"></div>

<!-- danh sách kết quả -->
<div id="resultList"></div>

@section Scripts {
    <script src="https://api.mapbox.com/mapbox-gl-js/v3.4.0/mapbox-gl.js"></script>

    <script>
        mapboxgl.accessToken = 'pk.eyJ1IjoiYW5ocHJvMTIzIiwiYSI6ImNtYjNrY2F2bDBuc2Uya3MzOHNiejI5emgifQ.-UDOpaQLTgv2G_BH7DyLeQ';
        let map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v12',
            center: [105.84713, 21.030653],
            zoom: 12
        });

        // Lấy GPS và hiển thị marker "Bạn ở đây"
        function setUserLocationMarker(lat, lng) {
            document.getElementById('UserLat').value = lat;
            document.getElementById('UserLng').value = lng;
            new mapboxgl.Marker({ color: '#0d6efd' })
                .setLngLat([lng, lat])
                .setPopup(new mapboxgl.Popup().setHTML("Bạn ở đây"))
                .addTo(map);
            map.flyTo({ center: [lng, lat], zoom: 13 });
        }

        navigator.geolocation?.getCurrentPosition(pos => {
            setUserLocationMarker(pos.coords.latitude, pos.coords.longitude);
        }, err => {
            console.warn("Không thể lấy vị trí người dùng.", err);
        });

        let markers = [];

        function clearMarkers() {
            markers.forEach(m => m.remove());
            markers = [];
        }

        function addMarker(court) {
            if (court.latitude == null || court.longitude == null) return;

            const marker = new mapboxgl.Marker()
                .setLngLat([court.longitude, court.latitude])
                .setPopup(new mapboxgl.Popup().setHTML(`<b>${court.name}</b><br>${court.address}`))
                .addTo(map);

            
            markers.push(marker);
        }

                function fitMapToMarkers() {
            if (markers.length === 0) return;

            const bounds = new mapboxgl.LngLatBounds();

            markers.forEach(marker => {
                bounds.extend(marker.getLngLat());
            });

            map.fitBounds(bounds, {
                padding: 50,
                maxZoom: 15,
                duration: 1000
            });
        }

        function renderList(data) {
            const container = document.getElementById('resultList');
            container.innerHTML = '';
            data.forEach(c => {
                const card = document.createElement('div');
                card.className = 'card mb-3 shadow-sm';
                card.innerHTML = `
                    <div class="card-header bg-light">
                        <h5 class="mb-0">${c.name}</h5>
                        <small class="text-muted">${c.address}</small>
                    </div>
                    <div class="card-body p-2">
                        ${c.courts.map(co => `
                            <h6>${co.name} <span class="badge bg-success">${co.minPrice.toLocaleString()} đ</span></h6>
                            <div>${co.amenities.join(', ')}</div>
                            <div>${co.availableSlots.map(s => `<span class="badge bg-primary card-slot">
                                    ${s.start.substring(0, 5)}-${s.end.substring(0, 5)}
                                </span>`).join('')}
                            </div>`).join('')}
                    </div>`;
                container.appendChild(card);
            });
        }

        document.getElementById('filterForm').addEventListener('submit', async e => {
            e.preventDefault();
            clearMarkers();
            document.getElementById('resultList').innerHTML = '<p>Đang tải…</p>';

            const qs = new URLSearchParams(new FormData(e.target));
            const res = await fetch('/api/v1/courts/search?' + qs);
            const data = await res.json();
            if (!data.length) {
                  alert('Không tìm thấy sân phù hợp.');
                document.getElementById('resultList').innerHTML = '<p>Không tìm thấy sân.</p>';
                return;
            }

            renderList(data);
            data.forEach(addMarker);
            fitMapToMarkers();
        });

        // Xử lý nút "Tìm sân gần đây"
        document.getElementById('btnNearby').addEventListener('click', () => {
            navigator.geolocation?.getCurrentPosition(async pos => {
                clearMarkers();
                document.getElementById('resultList').innerHTML = '<p>Đang tải…</p>';

                // Cập nhật tọa độ và bán kính mặc định 10km
                document.getElementById('UserLat').value = pos.coords.latitude;
                document.getElementById('UserLng').value = pos.coords.longitude;
                document.querySelector('input[name="RadiusKm"]').value = 10;

                // Tạo query string với tọa độ và bán kính
                const params = new URLSearchParams();
                params.append('userLat', pos.coords.latitude);
                params.append('userLng', pos.coords.longitude);
                params.append('radiusKm', 10);

                // Gửi request tới API nearby (API cần chuẩn bị)
                const res = await fetch('/api/v1/courts/nearby?' + params.toString());
                const data = await res.json();

                if (!data.length) {
                      alert('Không tìm thấy sân phù hợp.');
                    document.getElementById('resultList').innerHTML = '<p>Không tìm thấy sân gần đây.</p>';
                    return;
                }

                renderList(data);
                data.forEach(addMarker);
                fitMapToMarkers();
            }, err => {
                alert('Không thể lấy vị trí GPS của bạn. Vui lòng cho phép truy cập vị trí.');
            });
        });

        window.onload = function () {
            fetch("https://provinces.open-api.vn/api/?depth=1")
                .then(res => res.json())
                .then(provinces => {
                    const citySelect = document.getElementById("CitySelect");
                    provinces.forEach(p => {
                        const opt = document.createElement("option");
                        opt.value = p.code; // code để fetch quận/huyện
                        opt.textContent = p.name;
                        citySelect.appendChild(opt);
                    });
                });
        };

        function loadDistricts() {
            const cityCode = document.getElementById("CitySelect").value;
            const districtSelect = document.getElementById("DistrictSelect");
            districtSelect.innerHTML = '<option value="">-- Chọn Quận/Huyện --</option>';

            if (!cityCode) return;

            fetch(`https://provinces.open-api.vn/api/p/${cityCode}?depth=2`)
                .then(res => res.json())
                .then(data => {
                    data.districts.forEach(d => {
                        const opt = document.createElement("option");
                        opt.value = d.name;
                        opt.textContent = d.name;
                        districtSelect.appendChild(opt);
                    });
                });
        }
    </script>
}
